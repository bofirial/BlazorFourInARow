@using System.Threading
@using BlazorFourInARow.Pages.Game
@using Microsoft.Extensions.Logging

@if (SecondsRemaining != 0)
{
    <div class="countdown alert alert-warning my-1">
        <h3 class="alert-heading">

            <span class="seconds">@SecondsRemaining</span> @PostLabel

        </h3>
    </div>
}
    @functions {

[Parameter]
DateTime? CountdownTo { get; set; }

[Parameter]
Action CountdownCompleted { get; set; }

[Parameter]
string PostLabel { get; set; }

[Inject]
protected ILogger<GameBase> Logger { get; set; }

public int SecondsRemaining { get; set; }

public Timer Timer { get; set; }

protected override void OnParametersSet()
{
    UpdateSecondsRemaining(null);

    Logger.LogInformation($"Countdown set to: {CountdownTo?.ToLongTimeString()}");
}

public void UpdateSecondsRemaining(object state)
{
    if (CountdownTo == null)
    {
        SecondsRemaining = -1;
    }
    else
    {
        SecondsRemaining = (int)(CountdownTo.Value - DateTime.Now).TotalSeconds;
    }

    if (SecondsRemaining <= 0)
    {
        SecondsRemaining = 0;

        if (Timer != null)
        {
            Timer?.Dispose();

            Timer = null;

            CountdownCompleted();
        }
    }
    else
    {
        if (Timer == null)
        {
            Timer = new Timer(UpdateSecondsRemaining, null, 0, 500);
        }
    }

    StateHasChanged();
}
    }